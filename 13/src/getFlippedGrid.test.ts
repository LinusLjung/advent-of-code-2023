import { describe, expect, it } from 'bun:test';
import { getFlippedGrid } from 'getFlippedGrid';

describe('getFlippedGrid()', () => {
  it.each<[string[], string[]]>([
    [
      ['123', '456'],
      ['14', '25', '36'],
    ],
    [
      [
        '#.##..##.',
        '..#.##.#.',
        '##......#',
        '##......#',
        '..#.##.#.',
        '..##..##.',
        '#.#.##.#.',
      ],
      [
        '#.##..#',
        '..##...',
        '##..###',
        '#....#.',
        '.#..#.#',
        '.#..#.#',
        '#....#.',
        '##..###',
        '..##...',
      ],
    ],
    [
      [
        '#...##..#',
        '#....#..#',
        '..##..###',
        '#####.##.',
        '#####.##.',
        '..##..###',
        '#....#..#',
      ],
      [
        '##.##.#',
        '...##..',
        '..####.',
        '..####.',
        '#..##..',
        '##....#',
        '..####.',
        '..####.',
        '###..##',
      ],
    ],
    [
      [
        '###.....#...#',
        '..######.....',
        '..######.....',
        '###.....#...#',
        '####...#..##.',
        '#.#.#..######',
        '.#.##...#....',
        '.#.##...#...#',
        '#.#.#..######',
        '####...#..##.',
        '###.....#...#',
      ],
      [
        '#..###..###',
        '#..##.##.##',
        '######..###',
        '.##.#.##.#.',
        '.##..####..',
        '.##........',
        '.##........',
        '.##.##..##.',
        '#..#.####.#',
        '.....#..#..',
        '....##..##.',
        '....##..##.',
        '#..#.#.##.#',
      ]
    ],
  ])('should return parsed grid and its flipped version', (input, expected) => {
    expect(getFlippedGrid(input)).toEqual(expected);
  });
});
